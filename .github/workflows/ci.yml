name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: carhub_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.0

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Generate Prisma client
        run: |
          pnpm db:generate
          cd packages/db && pnpm db:generate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/carhub_test

      - name: Lint code
        run: pnpm lint

      - name: Check formatting
        run: pnpm format:check

      - name: Type check
        run: pnpm type-check

      - name: Run Prisma migrations
        run: cd packages/db && pnpm db:migrate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/carhub_test

      # Build step skipped in CI - not needed for database/API testing
      # Uncomment and add real secrets if build testing is required
      # - name: Build Next.js app
      #   run: |
      #     pnpm db:generate
      #     cd packages/web && pnpm build
      #   env:
      #     DATABASE_URL: postgresql://postgres:postgres@localhost:5432/carhub_test
      #     NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.CLERK_PUBLISHABLE_KEY }}
      #     CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}

  docker-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start Docker services
        run: |
          cd packages/infra
          docker compose up -d postgres minio
          
      - name: Wait for services
        run: |
          timeout 60 bash -c 'until docker compose -f packages/infra/docker-compose.yml exec -T postgres pg_isready -U postgres -h localhost; do sleep 1; done'
          timeout 60 bash -c 'until curl -f http://localhost:9000/minio/health/live 2>/dev/null; do sleep 1; done'

      - name: Run database tests
        run: |
          cd packages/infra
          docker compose exec -T postgres psql -U postgres -h localhost -d postgres -c "SELECT 1;"

      - name: Cleanup
        if: always()
        run: |
          cd packages/infra
          docker compose down -v 